#!/bin/bash

# whatever command-line method needs to be used to run this package

FF=$(dirname $0)/bin/ff
if [ -z "$1" ]; then
  cat << EOF
Planutils:
* First two arguments are <domain or operator> and <problem or facts>
* Extra arguments will be passed to FF

Original FF help:
EOF
  $FF
  exit 1
fi

# https://stackoverflow.com/questions/4632028/how-to-create-a-temporary-directory
WORK_DIR=`mktemp -d`

# check if tmp dir was created
if [[ ! "$WORK_DIR" || ! -d "$WORK_DIR" ]]; then
  echo "Could not create temp dir"
  exit 1
fi

function cleanup {
  rm -rf "$WORK_DIR"
  # echo "Deleted temp working directory $WORK_DIR"
}
# register the cleanup function to be called on the EXIT signal
trap cleanup EXIT

OUT=$WORK_DIR/ff.out
ERR=$WORK_DIR/ff.err

args=""
weight=""
cost_min=1

while getopts 'r:s:w:b:c:o:f:' opt; do
    case "$opt" in
        r)
            args+=" -r ${OPTARG}"
            ;;
        s)
            search="${OPTARG}"
            args+=" -s ${OPTARG}"
            ;;
        w)
            weight="${OPTARG}"
            ;;
        b)
            bound="${OPTARG}"
            ;;
        c)
            cost_min=${OPTARG}
            ;;
        o)
            args+=" -o ${OPTARG}"
            ;;
        f)
            args+=" -s ${OPTARG}"
            ;;
        ?)
        echo "Unexpected argument flag: $opt" > $ERR
        exit 1
        ;;
    esac
done

if [ ${search} -lt 0 || ${search} -gt 5 ]; then
    echo "Invalid search configuration: ${search}" > $ERR
    exit 1
fi
# Handle arguments for optimization
if [ ${search} -ge 3 ]; then
    if [ ! ${cost_min} ]; then
        args+=" -C"
    fi
    args+=" -w ${weight}"
    if [ "${bound}x" != "x" ]; then
        args+=" -b ${bound}"
fi
        
shift 2
$FF ${args} > $OUT 2>$ERR
# Getting plan
grep '[0-9]:' $OUT | cut -d : -f 2- | \
  awk '{$1=$1;print}' | \
  awk -F" " '{ print("(", $0, ")")}' > $PROBLEM.plan

cat $OUT >&1
cat $ERR >&2
